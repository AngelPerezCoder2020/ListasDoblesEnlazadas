package mainpackage;
import com.umg.data.structures.LinkedList.DoublyLinkedList;
import java.util.Scanner;

public class Main {
	private static Scanner ent = new Scanner(System.in);
	private static DoublyLinkedList<String> Lista = new DoublyLinkedList<>();
	private static String opc = "";
	
	public static void main(String[] args) {
		while(false==opc.equals("0")) {
			System.out.println("Lista Doblemente Enlazada \n\n1. Insertar al Inicio \n2.Insertar al Final \n3.Recorrer Hacia Adelante"
					+ "\n4.Recorrer hacia atras \n5.Mostrar tamaño de la lista \n6.Mostrar si la lista esta vacia \n7.Buscar elemento por valor \n8.Buscar elemento por indice"
					+ " \n9.Borrar un Elemento \n0.SALIR DEL PROGRAMA");
			opc=ent.nextLine();
			switch(opc) {
			case "1":{
				System.out.println("Escriba el mensaje del nuevo nodo");
				Lista.insertAtHead(ent.nextLine());
				break;
			}
			case "2":{
				System.out.println("Escriba el mensaje del nuevo nodo");
				Lista.insertAtTail(ent.nextLine());
				break;
			}
			case "3":{
				Lista.traverseForward();
				break;
			}
			case "4":{
				Lista.traverseBackward();
				break;
			}
			case "5":{
				System.out.println("El tamaño de la Lista es: "+Lista.size());
				break;
			}
			case "6":{
				if(Lista.isEmpty()) {
					System.out.println("La Lista está Vacía");
				}else {
					System.out.println("La Lista no está vacio, contiene: "+Lista.size()+" elementos.");
				}
				break;
			}
			case "7":{
				System.out.println(" \nIngrese el valor del Elemento que desea buscar en la lista");
				String respuesta = Lista.searchByValue(ent.nextLine()).toString();
				if(respuesta==null) {
					System.out.println("No se ah encontrado ningun item con el valor que usted busca");
				}else {
					System.out.println("El elemento: "+respuesta+" fué encontrado dentro de la lista");
				}
				break;
			}
			case "8":{
				break;
			}
			case "9":{
				break;
			}
			case "0":{
				break;
			}
			}
		}		
	}
}
